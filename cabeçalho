#include <stdio.h>
#include <ctype.h>
#include <locale.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>

void present();
void printMapa(int tropas[]);
void adc_tropas(char pais,char tropasJogador[], int tropastotais[], int num_tropas);
void sorteiapaises(char paises1[], char paises2[]);
void sortdados(	int dadosatk[], int dadosdfs[], int tropaatk, int tropadfs);
int ataque(char ataque[], char defesa[], char paises[], int tropas[]);
int vezdojogador(int contador);


void present(){
	int linha, coluna;
	char a;
	char present[16][46] ={{"\t  ---------------------------------------- \n"},
						   {"\t  |###      ####      ### ##### #######  | \n"},
					       {"\t  | ###    ######    ### ### ## ###  ### | \n"},
						   {"\t  |  ###  ###  ###  ### ####### #######  | \n"},
						   {"\t  |   ######    ###### #### ### ### ###  | \n"},
						   {"\t  |    ####      #### ####  ### ###  ### | \n"},
						   {"\t  |                                      | \n"},
						   {"\t  |   #####       ### ###        ########| \n"},
						   {"\t  |  #######     #### ####      #########| \n"},
						   {"\t  | ###   ###   ##### #####    #####     | \n"},
						   {"\t  | ##         ### ## ######  ###########| \n"},
						   {"\t  | ###  #### ####### ### ###### ###     | \n"},
						   {"\t  |  ###  ## ###  ### ###  ####  ########| \n"},
						   {"\t  |   ##### ###   ### ###        ########| \n"},
						   {"\t  ---------------------------------------- \n"}};
						
	for(linha=0;linha<15;linha++){
	for(coluna=0; coluna<45;coluna++){
		printf("%c", present[linha][coluna]);
		Sleep(15);
		}
	}
	printf("\n\n");
}

void printMapa(int tropas[]){
	int linha = 0, coluna = 0;
	char mapa[16][46] ={{"\t  ---------------------------------------- \n"},
						{"\t  |####    ####                          | \n"},
						{"\t  |#-A######-B#   ####    ####**#### ####| \n"},
						{"\t  |#01##-C##01#   #-D#    #-E#  #-F# #-G#| \n"},
						{"\t  |#####01#####   #01#    #01#  #01# #01#| \n"},
						{"\t  |    ####     **############  #### ####| \n"},
						{"\t  |     ####*****     #-H#         ####  | \n"},
						{"\t  |     #-I#          #01#         #-J#  | \n"},
						{"\t  | #####01#          ####         #01#  | \n"},
						{"\t  | #-K#####**####                 ####  | \n"},
						{"\t  | #01#      #-L#    ####       ####    | \n"},
						{"\t  | ####      #01#    #-M#       #-N#    | \n"},
						{"\t  |           ####****#01#       #01#    | \n"},
						{"\t  |                   ####*******####    | \n"},
						{"\t  ---------------------------------------- \n"}};
	mapa[03][06] = (char)((int)mapa[03][06] + tropas[0]);
	if(mapa[03][06]>=':'){
		while(mapa[03][06]>=':'){
			mapa[03][05] = (char)((int)mapa[03][05] + 1);
			mapa[03][06] = (char)((int)mapa[03][06] - 10);
		}
	}
	mapa[03][14] = (char)((int)mapa[03][14] + tropas[1]);
	if(mapa[03][14] >= ':'){
		while(mapa[03][14] >= ':'){
		mapa[03][13] = (char)((int)mapa[03][13] + 1);
		mapa[03][14] = (char)((int)mapa[03][14] - 10);
		}
	}
	mapa[04][10] = (char)((int)mapa[04][10] + tropas[2]);
	if(mapa[4][10] >= ':'){
		while(mapa[4][10] >= ':'){
		mapa[04][9] = (char)((int)mapa[04][9] + 1);
		mapa[04][10] = (char)((int)mapa[04][10] - 10);
		}
	}
	mapa[04][21] = (char)((int)mapa[04][21] + tropas[3]);
	if(mapa[4][21]>=':'){
		while(mapa[4][21]>=':'){
		mapa[04][20] = (char)((int)mapa[04][20] + 1);
		mapa[04][21] = (char)((int)mapa[04][21] - 10);
		}
	}
	mapa[04][29] = (char)((int)mapa[04][29] + tropas[4]);
	if(mapa[4][29]>=':'){
		while(mapa[4][29]>=':'){
		mapa[04][28] = (char)((int)mapa[04][28] + 1);
		mapa[04][29] = (char)((int)mapa[04][29] -10);
		}
	}
	mapa[04][35] = (char)((int)mapa[04][35] + tropas[5]);
	if(mapa[4][35]>= ':'){
		while(mapa[4][35]>= ':'){
		mapa[04][34] = (char)((int)mapa[04][34] + 1);
		mapa[04][35] = (char)((int)mapa[04][35] -10);
		}
	}
	mapa[04][40] = (char)((int)mapa[04][40] + tropas[6]);
	if(mapa[4][40]>= ':'){
		while(mapa[4][40]>= ':'){
		mapa[04][39] = (char)((int)mapa[04][39] + 1);
		mapa[04][40] = (char)((int)mapa[04][40] -10);
		}
	}
	mapa[07][25] = (char)((int)mapa[07][25] + tropas[7]);
	if(mapa[7][25] >= ':'){
		while(mapa[7][25] >= ':'){
		mapa[07][24] = (char)((int)mapa[07][24] + 1);
		mapa[07][25] = (char)((int)mapa[07][25] - 10);
		}
	}
	mapa[ 8][11] = (char)((int)mapa[ 8][11] + tropas[8]);
	if(mapa[8][11]>= ':'){
		while(mapa[8][11]>= ':'){
		mapa[ 8][10] = (char)((int)mapa[ 8][10] + 1);
		mapa[ 8][11] = (char)((int)mapa[ 8][11] -10);
		}
	}
	mapa[ 8][38] = (char)((int)mapa[ 8][38] + tropas[9]);
	if(mapa[8][38]>= ':'){
		while(mapa[8][38]>= ':'){
		mapa[ 8][37] = (char)((int)mapa[ 8][37] + 1);
		mapa[ 8][38] = (char)((int)mapa[ 8][38] -10);
		}
	}
	mapa[10][07] = (char)((int)mapa[10][07] + tropas[10]);
	if(mapa[10][7]>= ':'){
		while(mapa[10][7]>=':'){
			mapa[10][06] = (char)((int)mapa[10][06] + 1);
			mapa[10][07] = (char)((int)mapa[10][07] -10);
		}
	}
	mapa[11][17] = (char)((int)mapa[11][17] + tropas[11]);
	if(mapa[11][17]>=':'){
		while(mapa[11][17]>=':'){
			mapa[11][16] = (char)((int)mapa[11][16] + 1);
			mapa[11][17] = (char)((int)mapa[11][17] -10);
		}
	}
	mapa[12][25] = (char)((int)mapa[12][25] + tropas[12]);
	if(mapa[12][25]>= ':'){
		while(mapa[12][25]>= ':'){
			mapa[12][24] = (char)((int)mapa[12][24] + 1);
			mapa[12][25] = (char)((int)mapa[12][25] -10);
		}
	}
	mapa[12][36] = (char)((int)mapa[12][36] + tropas[13]);
	if(mapa[12][36]>= ':'){
		while(mapa[12][36]>=':'){
			mapa[12][35] = (char)((int)mapa[12][35] + 1);
			mapa[12][36] = (char)((int)mapa[12][36] -10);
		}
	}
	system("cls");
	printf("\t\tMAPA\n");
	for(linha=0;linha<15;linha++){
		for(coluna=0; coluna<45;coluna++){
		printf("%c", mapa[linha][coluna]);
		Sleep(5);
		}
	}
}

void adc_tropas(char pais,char tropasJogador[], int tropastotais[], int num_tropas){
	char paises[15] = {"ABCDEFGHIJKLMN"};	
	int i, j, aux = 0;
	for(i=0; i<14; i++){
		if(tropasJogador[i] == pais ){
			printf("Selecione o número de tropas: \n");
			scanf(" %d", &aux);
			break;
		}
		else if(paises[i] == pais){
			printf("Esse país não é seu!\n");		

			break;
		}
		else if(i == 13){
			printf("País inválido!\n");
			break;
		}
	}
	for(i=0; i<14; i++){
		if(paises[i] == pais){
			break;
		}
	}
	while(num_tropas>0){
		if(aux>num_tropas || aux < 0)printf("Número de tropas inválido\n");
		 else{
			tropastotais[i] += aux;
			num_tropas -= aux;
			aux = 0;
		}
		if(num_tropas>0){
			printf("Você ainda tem %d tropas! Selecione o país: \n", num_tropas);
			scanf(" %c", &pais);
			pais = toupper(pais);
			for(i=0; i<14; i++){
				if(tropasJogador[i] == pais ){
					printf("Selecione o número de tropas: \n");
					scanf(" %d", &aux);
					break;
				}
				else if(paises[i] == pais){
					printf("Esse país não é seu!\n");
					break;
				}
				else if(i == 13){
					printf("País inválido!\n");
					break;
				}
			}
			for(i=0; i<14; i++){
				if(paises[i] == pais){
					break;
				}
			}
		}	
	}
}

void sorteiapaises(char paises1[], char paises2[]){
	char paisestotais[14] = {"DGMKNLAFHBCEIJ"};
	char aux;
	int i = 0, j = 0, k = 0, a = 0;
	for(i=0;i<14;i++){
		k = rand()%2;
		if(a<7 && j<7){
			if(k%2){
				paises1[j] = paisestotais[i];
				j++;
			}
			else{
				paises2[a] = paisestotais[i];
				a++;
			}
		}
		else if(a>=7){
			paises1[j] = paisestotais[i];
			j++;
		}
		else if(j>=7){
			paises2[a] = paisestotais[i];
			a++;
		}
	}
	
	for(i=0; i<7; i++){
		for(j=0; j<7; j++){
			if(j<i){
				if(paises1[i]<paises1[j]){
					aux = paises1[i];
					paises1[i] = paises1[j];
					paises1[j] = aux;	
				}
			}
		}
	}
	for(i=0; i<7; i++){
		for(j=0; j<7; j++){
			if(j<i){
				if(paises2[i]<paises2[j]){
					aux = paises2[i];
					paises2[i] = paises2[j];
					paises2[j] = aux;	
				}
			}
		}
	}
	
}

void sortdados(	int dadosatk[], int dadosdfs[], int tropaatk, int tropadfs){

	int aux, i = 0, j = 0;

	for(aux=0; aux<tropaatk; aux++){
		dadosatk[aux] = (1 + rand()%6);	
	}
	for(i=0; i<3; i++){
		for(j=0; j<3; j++){
			if(j>i){
				if(dadosatk[i]<dadosatk[j]){
					aux = dadosatk[i];
					dadosatk[i] = dadosatk[j];
					dadosatk[j] = aux;	
				}
			}
		}
	}
	for(aux=0; aux<tropadfs+1; aux++){
		dadosdfs[aux] = (1 + rand()%6);	
	}
	for(i=0; i<3; i++){
		for(j=0; j<3; j++){
			if(j>i){
				if(dadosdfs[i]<dadosdfs[j]){
					aux = dadosdfs[i];
					dadosdfs[i] = dadosdfs[j];
					dadosdfs[j] = aux;	
				}
			}
		}
	}
}

int ataque(char ataque[], char defesa[], char paises[], int tropas[]){
	int i, j, aux, dados_ataque[3] = {}, dados_defesa[3] = {};
	 //i é auxiliar de ataque, j auxiliar de defesa
	//e aux auxiliar de dados e para print de paises
	char pais, paisatk, paisdfs;
	printf("Seus países:\n\t");	
	for(aux = 0; aux<strlen(ataque); aux++){
		printf("%c; ", ataque[aux]);
	}
	printf("\nEscolha o país de ataque:\n");
	scanf(" %c", &pais);
	pais = toupper(pais);
	for(i=0; i<14; i++){
		if(ataque[i] == pais){
			if(tropas[i] == 0){
				printf("Este país não tem tropas suficientes\n");
				Sleep(1000);
				printMapa(tropas);
				printf("Seus países:\n\t");	
				for(aux = 0; aux<strlen(ataque); aux++){
					printf("%c; ", ataque[aux]);
				}
				printf("\nEscolha o país de ataque:\n");
				scanf(" %c", &pais);
				pais = toupper(pais);				
				i = 0;		
			}
			else{
			paisatk = ataque[i];
			break;
			}	
		}
		else if(paises[i] == pais){
			printf("Esse país não é seu!\n");
			Sleep(200);
			printMapa(tropas);
			printf("Seus países:\n\t");	
			for(aux = 0; aux<strlen(ataque); aux++){
				printf("%c; ", ataque[aux]);
			}
			printf("\nEscolha o país de ataque:\n");
			scanf(" %c", &pais);
			pais = toupper(pais);				
			i = 0;
		}
		else if(i == 13){
			printf("País inválido!\n");
			Sleep(200);
			printMapa(tropas);
			printf("Seus países:\n\t");	
			for(aux = 0; aux<strlen(ataque); aux++){
				printf("%c; ", ataque[aux]);
			}
			printf("\nEscolha o país de ataque:\n");
			scanf(" %c", &pais);
			pais = toupper(pais);				
			i = 0;	
		}
	}
	for(i=0; i<14; i++){
		if(paises[i] == pais){
			break;
		}
	}
	printf("Paises de defesa:\n");
	for(aux=0; aux<strlen(defesa); aux++){
		printf("%c; ", defesa[aux]);
	}
	printf("\nEscolha o país de defesa:\n");
	scanf(" %c", &pais);
	pais = toupper(pais);
	for(j=0; j<14; j++){
		if(defesa[j] == pais){
			paisdfs = defesa[j];
			break;
		}
		else if(paises[j] == pais){
			printf("Esse país é seu, não da defesa!\n");
			printf("Paises de defesa:\n");
			for(aux=0; aux<strlen(defesa); aux++){
				printf("%c; ", defesa[aux]);
			}
			printf("\nEscolha o país de defesa:\n");
			scanf(" %c", &pais);
			pais = toupper(pais);
			j = 0;
		}
		else if(j == 13){
			printf("País inválido!\n");
			printf("Paises de defesa:\n");
			for(aux=0; aux<strlen(defesa); aux++){
				printf("%c; ", defesa[aux]);
			}
			printf("\nEscolha o país de defesa:\n");
			scanf(" %c", &pais);
			pais = toupper(pais);
			j = 0;		
		}
	}
	for(j=0; j<14; j++){
		if(paises[j] == pais){
			break;
		}
	}

	printf("País %c ataca o país %c\n", paisatk, paisdfs);
	int atk = 0, dfs = 0;
	sortdados(dados_ataque,dados_defesa, tropas[i], tropas[j]);
	printf("\tDados\nataque\tdefesa\n\n");
	for(aux=0; aux<3; aux++){
		printf("%d\t%d\n",dados_ataque[aux], dados_defesa[aux]);
		if(dados_ataque[aux]>dados_defesa[aux] && dados_ataque>0 && dados_defesa>0){
			tropas[j]--;
			atk++;
		}
		else{
			tropas[i]--;
			dfs++;
		}
	}
	printf("O ataque perdeu %d exércitos\nA defesa perdeu %d exércitos\n", dfs, atk);
	if(tropas[j]<0){
	Sleep(1000);	
	}
	
}

int vezdojogador(int contador){
	if(contador%2 == 0){
		contador += 1; 
		return 1;
	}
	else{
		contador += 1;
		return 2;
	}
}
